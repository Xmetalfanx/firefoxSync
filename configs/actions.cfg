
function checkIntialFFProfilesBackupLocation() {
    [ -d ${intialFFProfilesBackup} ] && return

    echo "Intial Profile backup location does not exist, creating now" && mkdir -v "${intialFFProfilesBackup}"

}

function checkIntialProfileAlreadyBackedUp() {
    echo -e "Checking to see if the user's intial firefox profiles have already been backed up"

    # "is the backup folder not empty?"
    [ ! -z $(ls ${intialFFProfilesBackup} ) ] && echo -e "Firefox Intial backup location not empty\nScripts will not overwrite what is currently backed up" && return


    echo "About to Backup intial Firefox Profile.\nNotice: when copying, this may take awhile, please be patient"
    cp -r -v ${ffProfileFolder} ${intialFFProfilesBackup}

}

function backupIntialProfiles() {
    clear

    # checks to see if the backup location in the user's home folder exists already and if not, it creates it
    checkIntialFFProfilesBackupLocation

    checkIntialProfileAlreadyBackedUp

}

# not the intial profile ..i want to keep the first backup un-touched
function backupFFProfiles() {
    current_date=$(date +"%b_%d_%Y")
    current_date_FF_Backup_dir="${ffProfileBackupFolder}/${current_date}"

    # at this point the firefox profile (to be backuped up exists ) and the intial backup location has data in it
    # aka "no need for checks at this point"

    clear 
    # check for dir with the current date in the backup (root backup) folder
    echo "Creating location to store Firefox backups "
    [ ! -d ${current_date_FF_Backup_dir} ] && mkdir -v ${current_date_FF_Backup_dir}

    # if its not empty ("not" being the inverse part)
    # idea: do i want to get hyper specific and not overwrite anything?

    echo "Checking if the non-intial backup locaiton is empty or not"

    [ ! -z $(ls ${current_date_FF_Backup_dir} ) ] && echo "Existing backups being overwritten" &&  rm -r "${current_date_FF_Backup_dir}"/* || echo "Backing up Firefox Profile"

    userPrompt

    cp -r -v ${ffProfileFolder} ${current_date_FF_Backup_dir}
}

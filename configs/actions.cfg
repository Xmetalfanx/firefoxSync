# Creates backup location for the intial backup
function checkIntialFFProfilesBackupLocation() {
    [ -d ${intialFFProfilesBackup} ] && return

    echo "Intial Profile backup location does not exist, creating now" && mkdir -v "${intialFFProfilesBackup}"
    userPrompt
}

function checkIntialProfileAlreadyBackedUp() {

    checkIntialFFProfilesBackupLocation

    clear
    echo -e "Checking to see if the user's intial firefox profiles have already been backed up"

    [ ! -z $(ls ${intialFFProfilesBackup} ) ] && runInitProfileBackup="no" || runInitProfileBackup="yes"

}

function backupIntialProfiles() {
    clear

    checkIntialProfileAlreadyBackedUp

    echo "About to Backup intial Firefox Profile.\nNotice: when copying, this may take awhile, please be patient" && cp -r -v ${ffProfileFolder} ${intialFFProfilesBackup} && echo -e "\v INTIAL BACKUP OF Firefox Profiles created"

    userPrompt
}

function backupFFProfiles() {
    current_date=$(date +"%b_%d_%Y")
    current_date_FF_Backup_dir="${ffProfileBackupFolder}/${current_date}"

    # at this point the firefox profile (to be backuped up exists ) and the intial backup location has data in it
    # aka "no need for checks at this point"

    clear
    # check for dir with the current date in the backup (root backup) folder
    echo "Creating location to store Firefox backups "
    [ ! -d ${current_date_FF_Backup_dir} ] && mkdir -v ${current_date_FF_Backup_dir}

    # if its not empty ("not" being the inverse part)
    # idea: do i want to get hyper specific and not overwrite anything?

    echo "Checking if the non-intial backup location is empty or not"

    [ ! -z $(ls ${current_date_FF_Backup_dir} ) ] && echo "Existing backups being overwritten" &&  rm -r "${current_date_FF_Backup_dir}"/* || echo "Backing up Firefox Profile"

    userPrompt

    cp -r -v ${ffProfileFolder} ${current_date_FF_Backup_dir} && echo -e "\v Firefox Profiles backed up"

}

# not the intial profile ..i want to keep the first backup un-touched
function metaBackupFFProfiles() {


    # 1. check if user has FIrefox configs to backup .. .if not (no Firefox) there is nothing to do. - 

    [ -d "${ffProfileFolder}" ] && echo -e "Firefox Configs Detected\n\vProeeding to backup firefox profiles" && userPrompt || echo "Firefox profile config location does not exit, nothing to do, Exiting script" || exit

    # thought: can this be placed elsewhere? 
    # 2. Check if the destination folder exists, if it doesn't CREATE it
    checkDirExistsAndCreate "${ffProfileBackupFolder}" && userPrompt

    # 3. check for intial backup location containing data
    checkIntialProfileAlreadyBackedUp

    case ${runInitProfileBackup} in

        no) echo -e "Firefox Intial backup location is not empty\nScripts will not overwrite what is currently backed up" && userPrompt && clear && backupFFProfiles ;;

        yes) backupIntialProfiles ;;

        *) echo "error detecting if the intial backups have been performed" ;;

    esac
}
